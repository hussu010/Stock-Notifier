{
  "swagger": "2.0",
  "info": {
    "title": "Stock Notifier API Docs",
    "description": "API documentation for stock notifier (P.S: use HTTPS scheme if hosted on https).",
    "version": "1.0.0"
  },
  "host": "",
  "basePath": "/",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "paths": {
    "/api/orders/": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrderBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "order created successfully.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "patch": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrderBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order updated successfully.",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "404": {
            "description": "order not found.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "order deleted.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "404": {
            "description": "order not found.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      }
    },
    "/api/tms-auth/": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TmsAuth"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TmsAuth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "order created successfully.",
            "schema": {
              "$ref": "#/definitions/TmsAuth"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/SingleMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SingleMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "string"
        }
      }
    },
    "BadRequestError": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "msg": {
                "type": "string",
                "example": "string"
              },
              "param": {
                "type": "string",
                "example": "param"
              },
              "location": {
                "type": "string",
                "example": "body"
              }
            }
          }
        }
      }
    },
    "OrderBody": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "example": "RSDC"
        },
        "entry": {
          "type": "string",
          "example": "1200"
        },
        "target": {
          "type": "string",
          "example": "1200"
        },
        "stopLoss": {
          "type": "string",
          "example": "1200"
        },
        "exit": {
          "type": "string",
          "example": "1200"
        },
        "status": {
          "type": "string",
          "example": "{OPEN | CANCELLED | COMPLETED}"
        }
      }
    },
    "OrderResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "string"
        },
        "symbol": {
          "type": "string",
          "example": "RSDC"
        },
        "title": {
          "type": "string",
          "example": "string"
        },
        "entry": {
          "type": "string",
          "example": "1200"
        },
        "target": {
          "type": "string",
          "example": "1200"
        },
        "stopLoss": {
          "type": "string",
          "example": "1200"
        },
        "exit": {
          "type": "string",
          "example": "1200"
        },
        "status": {
          "type": "string",
          "example": "{OPEN | CANCELLED | COMPLETED}"
        },
        "createdAt": {
          "type": "string",
          "example": "string"
        },
        "updatedAt": {
          "type": "string",
          "example": "string"
        }
      }
    },
    "OrderList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "string"
          },
          "symbol": {
            "type": "string",
            "example": "RSDC"
          },
          "title": {
            "type": "string",
            "example": "string"
          },
          "entry": {
            "type": "string",
            "example": "1200"
          },
          "target": {
            "type": "string",
            "example": "1200"
          },
          "stopLoss": {
            "type": "string",
            "example": "1200"
          },
          "exit": {
            "type": "string",
            "example": "1200"
          },
          "status": {
            "type": "string",
            "example": "{OPEN | CANCELLED | COMPLETED}"
          },
          "createdAt": {
            "type": "string",
            "example": "string"
          },
          "updatedAt": {
            "type": "string",
            "example": "string"
          }
        }
      }
    },
    "TmsAuth": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "string"
        },
        "xsrfToken": {
          "type": "string",
          "example": "RSDC"
        },
        "_aid": {
          "type": "string",
          "example": "string"
        },
        "_rid": {
          "type": "string",
          "example": "1200"
        },
        "clientId": {
          "type": "string",
          "example": "1200"
        },
        "createdAt": {
          "type": "string",
          "example": "string"
        },
        "updatedAt": {
          "type": "string",
          "example": "string"
        }
      }
    }
  }
}
